val spaceship-shot = tasks(1)

task Spaceship () {
    var x = 16
    var l = 0
    var r = 0
    var uv-crop = [0, 0]

    toggle :Show {
        await(<2:s>)

        spawn {
            every :Pico.Draw {
                pico.set.image.crop([uv-crop, [16, 8]])
                pico.output.draw.image([x, 216], IMG-SPACESHIP)
            }
        }

        par-or {
            await(:Collision.Spaceship)
        } with {
            every :Pico.Key.Dn {
                match it.key {
                    :Key-Left => set l = 4
                    :Key-Right => set r = 4
                    :Key-Q => spawn Shot([x + 8, 208], -8) in spaceship-shot
                }
            }
        } with {
            every :Pico.Key.Up {
                match it.key {
                    :Key-Left => set l = 0
                    :Key-Right => set r = 0
                }
            }
        } with {
            every :Pico.Frame {
                set x = x + (r - l)
            }
        }

        watching <1.5:s> { ;; exploding state
            loop {
                set uv-crop = [16, 0]
                await(<0.1:s>)
                set uv-crop = [32, 0]
                await(<0.1:s>)
            }
        }
    }
}

;; testing some stuff
;; :Key-T => broadcast(:aaaa) in :global
