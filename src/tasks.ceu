enum :InvaderState { Dead, Up, Down }
data :Invader = [pos :XY, type, state]

val explosions = tasks(5)
val shots = tasks(1)

task Explosion(pos :XY, lifetime, img) {
    watching <lifetime:s> {
        every :Pico.Draw {
            pico.set.image.crop(nil)
            pico.output.draw.image(pos, img)
        }
    }
}

task Shot(pos :XY, dy) {
    par-or {
        every :Pico.Frame {
            set pos.y = pos.y + dy;
            if pos.y <= 10 {
                break()
            }
        }
    } with {
        every :Pico.Draw {
            pico.set.color.draw(WHITE)
            pico.output.draw.rect([pos, [1, 7]])
        }
    }

    spawn Explosion([pos.x - 3, pos.y], 0.3, IMG_EXP2) in explosions
}
